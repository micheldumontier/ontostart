name: Propose w3id.org redirects

on:
  workflow_dispatch:
    inputs:
      ONTO_ABBREV:
        description: "Short directory name to create in w3id.org (e.g., 'testo')"
        required: true
        default: "testo"
      SOURCE_HTACCESS_PATH:
        description: "Path in this repo to the .htaccess to copy"
        required: true
        default: "scripts/.htaccess"
      W3ID_FORK_OWNER:
        description: "Org to own the fork (leave empty to fork under your user)"
        required: false
        default: ""

permissions:
  contents: write
  pull-requests: write

env:
  W3ID_UPSTREAM_REPO: perma-id/w3id.org

jobs:
  make-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Check out this repository
        uses: actions/checkout@v4

      - name: Verify gh is available
        run: gh --version

      - name: Set up git identity
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Inputs
        run: |
          echo "ONTO_ABBREV=${{ inputs.ONTO_ABBREV }}" >> $GITHUB_ENV
          echo "SOURCE_HTACCESS_PATH=${{ inputs.SOURCE_HTACCESS_PATH }}" >> $GITHUB_ENV
          echo "REQ_OWNER=${{ inputs.W3ID_FORK_OWNER }}" >> $GITHUB_ENV

      - name: Authenticate gh
        env:
          GH_TOKEN: ${{ secrets.W3ID_TOKEN }}   # PAT with repo scope
        run: gh auth status

      - name: Determine upstream default branch
        env:
          GH_TOKEN: ${{ secrets.W3ID_TOKEN }}
        run: |
          BASE_BRANCH="$(gh api repos/${{ env.W3ID_UPSTREAM_REPO }} -q .default_branch)"
          echo "BASE_BRANCH=${BASE_BRANCH}" >> $GITHUB_ENV

      - name: Decide fork target (org vs user)
        env:
          GH_TOKEN: ${{ secrets.W3ID_TOKEN }}
        run: |
          FORK_OWNER="${GITHUB_ACTOR}"
          TARGET_IS_ORG="false"
          if [ -n "${REQ_OWNER}" ]; then
            TYPE="$(gh api users/${REQ_OWNER} -q .type || echo unknown)"
            if [ "${TYPE}" = "Organization" ]; then
              FORK_OWNER="${REQ_OWNER}"
              TARGET_IS_ORG="true"
              echo "Fork will be created under org '${FORK_OWNER}'."
            else
              echo "Input '${REQ_OWNER}' is not an Organization (type=${TYPE}); forking under user '${GITHUB_ACTOR}'."
            fi
          else
            echo "No org provided; forking under user '${GITHUB_ACTOR}'."
          fi
          echo "FORK_OWNER=${FORK_OWNER}" >> $GITHUB_ENV
          echo "TARGET_IS_ORG=${TARGET_IS_ORG}" >> $GITHUB_ENV

      - name: Fork perma-id/w3id.org (no clone)
        env:
          GH_TOKEN: ${{ secrets.W3ID_TOKEN }}
        run: |
          if [ "${TARGET_IS_ORG}" = "true" ]; then
            gh repo fork "${{ env.W3ID_UPSTREAM_REPO }}" --org "${FORK_OWNER}" --remote=false || true
          else
            gh repo fork "${{ env.W3ID_UPSTREAM_REPO }}" --remote=false || true
          fi

      - name: Compute fork fullname and clone it
        env:
          GH_TOKEN: ${{ secrets.W3ID_TOKEN }}
        run: |
          FORK_FULLNAME="${FORK_OWNER}/$(basename '${{ env.W3ID_UPSTREAM_REPO }}')"
          echo "FORK_FULLNAME=${FORK_FULLNAME}" >> $GITHUB_ENV

          # Wait for fork to appear
          for i in {1..10}; do
            if git ls-remote "https://github.com/${FORK_FULLNAME}.git" &>/dev/null; then
              break
            fi
            echo "Waiting for fork to be ready (${i}/10)..."
            sleep 3
          done

          git clone "https://github.com/${FORK_FULLNAME}.git"
          echo "CLONED_DIR=$(basename '${{ env.W3ID_UPSTREAM_REPO }}')" >> $GITHUB_ENV

      - name: Create branch and copy .htaccess
        run: |
          cd "${CLONED_DIR}"
          BRANCH="add-${ONTO_ABBREV}-$(date +%Y%m%d%H%M%S)"
          echo "BRANCH=${BRANCH}" >> $GITHUB_ENV

          mkdir -p "${ONTO_ABBREV}"
          if [ ! -f "${GITHUB_WORKSPACE}/${SOURCE_HTACCESS_PATH}" ]; then
            echo "Source ${SOURCE_HTACCESS_PATH} not found." >&2
            exit 1
          fi
          cp "${GITHUB_WORKSPACE}/${SOURCE_HTACCESS_PATH}" "${ONTO_ABBREV}/.htaccess"

          git checkout -b "${BRANCH}"
          git add "${ONTO_ABBREV}/.htaccess"
          git commit -m "Add ${ONTO_ABBREV}/.htaccess"

      - name: Configure git to use gh credentials
        env:
          GH_TOKEN: ${{ secrets.W3ID_TOKEN }}
        run: gh auth setup-git

      - name: Push branch to fork
        env:
          FORK_FULLNAME: ${{ env.FORK_FULLNAME }}
          GH_TOKEN: ${{ secrets.W3ID_TOKEN }}
          CLONED_DIR: ${{ env.CLONED_DIR }}
          BRANCH: ${{ env.BRANCH }}
          GITHUB_ACTOR: ${{ github.actor }}
        run: |
          cd "${CLONED_DIR}"
          CLEAN_TOKEN="$(printf %s "${GH_TOKEN}" | tr -d '\r\n')"
          git push "https://${GITHUB_ACTOR}:${CLEAN_TOKEN}@github.com/${FORK_FULLNAME}" "${BRANCH}"

      - name: Open Pull Request to upstream
        env:
          GH_TOKEN: ${{ secrets.W3ID_TOKEN }}
        run: |
          gh pr create \
            --repo "${{ env.W3ID_UPSTREAM_REPO }}" \
            --head "${FORK_OWNER}:${BRANCH}" \
            --base "${BASE_BRANCH}" \
            --title "Add ${ONTO_ABBREV} redirects" \
            --body "This PR adds \`${ONTO_ABBREV}/.htaccess\` with redirects for the \`${ONTO_ABBREV}\` namespace."

      - name: Show PR URL
        env:
          GH_TOKEN: ${{ secrets.W3ID_TOKEN }}
        run: gh pr list --repo "${{ env.W3ID_UPSTREAM_REPO }}" --state open --limit 5
