name: FOOPS!

on:
  workflow_dispatch:

jobs:
  foops:
    runs-on: ubuntu-latest
    env:
      #ONTO_URI: https://w3id.org/testo/
      ONTO_URI: https://raw.githubusercontent.com/micheldumontier/ontostart/refs/heads/main/versions/0.0.13/testo.ttl
      GIST_ID: ${{ vars.GIST_ID }}
    
    steps:
      - name: Call FOOPS! API
        id: foops
        run: |
          curl -X POST "https://foops.linkeddata.es/assessOntology" \
              -H  "accept: application/json" \
              -H "Content-Type: application/json" \
              -d "{  \"ontologyUri\": \"$ONTO_URI\"}" \
              -o foops-results.json

      - name: Upload foops results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: foops-results
          path: foops-results.json
          
      - name: Process FOOPS! results
        run: |
          python3 - << 'PY'
          import json, pathlib, os
          total_score = 0
          with open('foops-results.json') as f:
              data = json.load(f)
              tot_checks = len(data["checks"])
              passed_checks = 0
              for check in data["checks"]:
                  pas=check["total_passed_tests"]
                  tot=check["total_tests_run"]
              
                  check_score = pas / tot
                  total_score += check_score
                  
              overall_score = total_score / tot_checks * 100
              label = f"{overall_score:.1f}% ({total_score}/{tot_checks} tests)"
              with open(os.environ["GITHUB_ENV"], "a") as f:
                f.write(f"FOOPS_SCORE={label}\n")  
          PY
          
      - name: Badge â€” FOOPS
        if: always()
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_TOKEN }}
          gistID: ${{ env.GIST_ID }}
          filename: ontology-ci-foops.json
          label: FOOPS!
          message: ${{ env.FOOPS_SCORE }}
          color: ${{ steps.foops.outcome == 'success' && 'brightgreen' || steps.foops.outcome == 'cancelled' && 'yellow' || 'red' }}
